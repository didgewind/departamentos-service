spring:
  application:
    name: departamentos-service

  datasource:
    url: jdbc:mysql://localhost:3306/departamentos

# Username and password
    username: maza
    password: maza

# Keep the connection alive if idle for a long time (needed in production)
    testWhileIdle: true
    validationQuery: SELECT 1


  data:
    mongodb:
#      authentication-database: admin
#      username: root
#      password: root
      database: departamentos
#      port: 27017
      host: 172.17.0.1   

server:
  port: 7777
  
eureka:
  client:
    enabled: true
    serviceUrl:
      # Al ejecutar desde docker activaremos EUREKA_SERVER as√≠:
      # ENTRYPOINT ["java", "-DEUREKA_SERVER=http://eureka-service:1111/eureka","-jar","/empleados-rest-0.0.1-SNAPSHOT.jar"]
      defaultZone: ${EUREKA_SERVER:http://localhost:1111/eureka/}
#      defaultZone: http://eureka-service:1111/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 5
# Generamos id aleatorio para poder registrar diferentes instancias con eureka
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}

management:
  endpoints:
    web:
      exposure:
        include: "*"
        
app:
  empleadosServiceAlias: empleados-service